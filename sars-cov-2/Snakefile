import datetime


localrules:
    all,
    clean,
    clean_all,
    dump_config,
    deploy_wuhan,
    deploy_21L,


include: "workflow/snakemake_rules/preprocess.smk"
include: "workflow/snakemake_rules/qc_preparation.smk"
include: "workflow/snakemake_rules/subsampling.smk"
include: "workflow/snakemake_rules/core.smk"


date = datetime.date.today()
timestamp = datetime.datetime.utcnow().isoformat()[:-7] + "Z"


rule all:
    input:
        expand(
            "deploy/{build_name}/staging.log",
            build_name=["wuhan", "21L", "nsp", "XBB"],
        ),


rule deploy_wuhan:
    input:
        tree="auspice/wuhan/auspice.json",
        root="auspice/wuhan/auspice_raw_root-sequence.json",
    output:
        touchfile="deploy/wuhan/staging.log",
        tree=temp("deploy/nextclade_sars-cov-2.json"),
        root=temp("deploy/nextclade_sars-cov-2_root-sequence.json"),
    shell:
        """
        cp {input.tree} {output.tree}
        cp {input.root} {output.root}
        nextstrain deploy s3://nextstrain-staging \
            {output.tree} {output.root}
        touch {output.touchfile}
        """


rule deploy_21L:
    input:
        tree="auspice/21L/auspice.json",
        root="auspice/21L/auspice_raw_root-sequence.json",
    output:
        touchfile="deploy/21L/staging.log",
        tree=temp("deploy/nextclade_sars-cov-2_21L.json"),
        root=temp("deploy/nextclade_sars-cov-2_21L_root-sequence.json"),
    shell:
        """
        cp {input.tree} {output.tree}
        cp {input.root} {output.root}
        nextstrain deploy s3://nextstrain-staging \
            {output.tree} {output.root}
        touch {output.touchfile}
        """


rule deploy_nsp:
    input:
        tree="auspice/nsp/auspice.json",
        root="auspice/nsp/auspice_raw_root-sequence.json",
    output:
        touchfile="deploy/nsp/staging.log",
        tree=temp("deploy/nextclade_sars-cov-2_nsp.json"),
        root=temp("deploy/nextclade_sars-cov-2_nsp_root-sequence.json"),
    shell:
        """
        cp {input.tree} {output.tree}
        cp {input.root} {output.root}
        nextstrain deploy s3://nextstrain-staging \
            {output.tree} {output.root}
        touch {output.touchfile}
        """


rule deploy_xbb:
    input:
        tree="auspice/XBB/auspice.json",
        root="auspice/XBB/auspice_raw_root-sequence.json",
    output:
        touchfile="deploy/XBB/staging.log",
        tree=temp("deploy/nextclade_sars-cov-2_XBB.json"),
        root=temp("deploy/nextclade_sars-cov-2_XBB_root-sequence.json"),
    shell:
        """
        cp {input.tree} {output.tree}
        cp {input.root} {output.root}
        nextstrain deploy s3://nextstrain-staging \
            {output.tree} {output.root}
        touch {output.touchfile}
        """


rule clean_all:
    message:
        "Removing directories: {params}"
    params:
        "pre-processed",
        "data",
        "log/*",
        "logs",
        "benchmarks",
        "auspice",
        "builds",
        "output",
        "examples",
        "test",
    shell:
        "rm -rfv {params}"


rule clean:
    message:
        "Removing directories: {params}"
    params:
        "log/*",
        "logs",
        "benchmarks",
        "auspice",
        "builds",
        "test",
        "output",
        "examples",
    shell:
        "rm -rfv {params}"


rule dump_config:
    run:
        import sys
        import ruamel.yaml

        yaml = ruamel.yaml.YAML()
        yaml.dump(config, sys.stdout)
